/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package interfaz;

import comparator.OrdenarMediaEdad;
import comparator.OrdenarMediaPuntuacion;
import comparator.OrdenarPeliculasActor;
import comparator.OrdenarPeliculasDirector;
import comparator.OrdenarPeliculasTematica;
import funciones.DatosCatalogo;
import java.awt.Color;
import java.awt.Font;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.PointerInfo;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import modelo.ModeloListaCatalogo;
import modelo.ModeloListaPeliculas;
import modelo.ModeloListaSeries;
import vergeflix.Media;
import vergeflix.Pelicula;
import vergeflix.Serie;
import vergeflix.Vergeflix;

/**
 *
 * @author Heriberto Amezcua
 * @version 1.0
 * @since JDK 19
 */
public class JDCatalogo extends javax.swing.JDialog {

    private ArrayList<Media> listaMedias;
    private ArrayList<Serie> listaSeries;
    private ArrayList<Pelicula> listaPeliculas;
    private ModeloListaCatalogo modeloMedia;
    private ModeloListaPeliculas modeloPelicula;
    private ModeloListaSeries modeloSerie;
    private int numPeliculas;
    private int numSeries;
    private boolean haCerrado;
    private int rowSelected;
    private Pelicula mediaSelected;

    /**
     * Creates new form JDCatalog
     */
    public JDCatalogo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JDCatalogo(java.awt.Frame parent, boolean modal, ArrayList<Media> listaMedias) {
        super(parent, modal);
        initComponents();
        //Initial values
        setLocationRelativeTo(null);
        ImageIcon icon = new ImageIcon("play-icon.png");
        this.setIconImage(icon.getImage());
        this.setTitle("VERGEFLIX");
        this.setResizable(false);
        
        this.listaMedias = listaMedias;
        JTableHeader header = tableCatalogo.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 14));
        tableCatalogo.setRowHeight(25);

        //instancio la clase que me ordena la lista a mi gusto
        OrdenarMediaEdad edad = new OrdenarMediaEdad();
        //ordeno la copia del catalogo
        Collections.sort(this.listaMedias, edad);
        modeloMedia = new ModeloListaCatalogo(this.listaMedias);
        tableCatalogo.setModel(modeloMedia);
        comboOrdenar.addItem("Calificación de Edad");
        comboOrdenar.addItem("Puntuación disponibles");

        //calculo el numero de series y peliculas que ya hay cargadas en el catalogo 
        for (Media m : this.listaMedias) {
            if (m instanceof Pelicula) {
                numPeliculas++;
            } else {
                numSeries++;
            }
        }

        this.listaPeliculas = Vergeflix.peliculasCatalogo(this.listaMedias, numPeliculas);
        this.listaSeries = Vergeflix.seriesCatalogo(this.listaMedias, numSeries);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        pItemVotos = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCatalogo = new javax.swing.JTable();
        labelMostrar = new javax.swing.JLabel();
        comboMedia = new javax.swing.JComboBox<>();
        labelOrdenar = new javax.swing.JLabel();
        comboOrdenar = new javax.swing.JComboBox<>();

        jPopupMenu1.setAlignmentX(0.5F);

        pItemVotos.setText("Visualizar votos");
        pItemVotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pItemVotosActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pItemVotos);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableCatalogo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableCatalogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableCatalogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableCatalogoMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableCatalogo);

        labelMostrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMostrar.setText("Mostrar:");

        comboMedia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboMedia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peliculas y Series", "Peliculas", "Series" }));
        comboMedia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboMediaItemStateChanged(evt);
            }
        });

        labelOrdenar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelOrdenar.setText("Ordenar por:");

        comboOrdenar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboOrdenar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboOrdenarItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1287, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(labelOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMostrar)
                    .addComponent(comboMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelOrdenar)
                    .addComponent(comboOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboMediaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboMediaItemStateChanged
        switch (comboMedia.getSelectedIndex()) {
            case 0 -> {
                modeloMedia = new ModeloListaCatalogo(this.listaMedias);
                tableCatalogo.setModel(modeloMedia);
                comboOrdenar.removeAllItems();
                comboOrdenar.addItem("Calificación de Edad");
                comboOrdenar.addItem("Puntuación");

            }
            case 1 -> {
                modeloPelicula = new ModeloListaPeliculas(this.listaPeliculas);
                tableCatalogo.setModel(modeloPelicula);
                comboOrdenar.removeAllItems();
                comboOrdenar.addItem("Calificación de Edad");
                comboOrdenar.addItem("Temática");
                comboOrdenar.addItem("Actor");
                comboOrdenar.addItem("Director");
            }
            case 2 -> {
                modeloSerie = new ModeloListaSeries(this.listaSeries);
                tableCatalogo.setModel(modeloSerie);
                comboOrdenar.removeAllItems();
                comboOrdenar.addItem("Calificación de Edad");
                comboOrdenar.addItem("Puntuación");
            }
        }
    }//GEN-LAST:event_comboMediaItemStateChanged

    private void comboOrdenarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboOrdenarItemStateChanged
        switch (comboMedia.getSelectedIndex()) {
            case 0 -> {
                switch (comboOrdenar.getSelectedIndex()) {
                    case 0 -> {
                        //instancio la clase que me ordena la lista a mi gusto
                        OrdenarMediaEdad edad = new OrdenarMediaEdad();
                        //ordeno la copia del catalogo
                        Collections.sort(this.listaMedias, edad);
                        modeloMedia.fireTableDataChanged();
                    }
                    case 1 -> {
                        //instancio la clase que me ordena la lista a mi gusto
                        OrdenarMediaPuntuacion puntuacion = new OrdenarMediaPuntuacion();
                        //ordeno la copia del catalogo
                        Collections.sort(this.listaMedias, puntuacion);
                        modeloMedia.fireTableDataChanged();
                    }
                }
            }
            case 1 -> {
                switch (comboOrdenar.getSelectedIndex()) {
                    case 0 -> {
                        //instancio la clase que me ordena la lista a mi gusto
                        OrdenarMediaEdad edad = new OrdenarMediaEdad();
                        //ordeno la copia del catalogo
                        Collections.sort(this.listaPeliculas, edad);
                        modeloPelicula.fireTableDataChanged();
                    }
                    case 1 -> {
                        OrdenarPeliculasTematica tematica = new OrdenarPeliculasTematica();
                        Collections.sort(this.listaPeliculas, tematica);
                        modeloPelicula.fireTableDataChanged();
                    }
                    case 2 -> {
                        OrdenarPeliculasActor actor = new OrdenarPeliculasActor();
                        Collections.sort(this.listaPeliculas, actor);
                        modeloPelicula.fireTableDataChanged();

                    }
                    case 3 -> {
                        OrdenarPeliculasDirector director = new OrdenarPeliculasDirector();
                        Collections.sort(this.listaPeliculas, director);
                        modeloPelicula.fireTableDataChanged();

                    }
                }
            }
            case 2 -> {
                switch (comboOrdenar.getSelectedIndex()) {
                    case 0 -> {
                        OrdenarMediaEdad edad = new OrdenarMediaEdad();
                        //ordeno la copia del catalogo
                        Collections.sort(this.listaSeries, edad);
                        modeloSerie.fireTableDataChanged();
                    }
                    case 1 -> {
                        //instancio la clase que me ordena la lista a mi gusto
                        OrdenarMediaPuntuacion puntuacion = new OrdenarMediaPuntuacion();
                        //ordeno la copia del catalogo
                        Collections.sort(this.listaSeries, puntuacion);
                        modeloSerie.fireTableDataChanged();
                    }
                }
            }
        }
    }//GEN-LAST:event_comboOrdenarItemStateChanged

    private void tableCatalogoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCatalogoMouseReleased
        int row = tableCatalogo.rowAtPoint(evt.getPoint());
        int column = tableCatalogo.columnAtPoint(evt.getPoint());
        tableCatalogo.setRowSelectionInterval(row, row);
        tableCatalogo.setColumnSelectionInterval(column, column);

        if (tableCatalogo.getModel().equals(modeloMedia)) {
            //Sample 06: Show Popup menu at right click location
            if (evt.getButton() == MouseEvent.BUTTON3 && this.listaMedias.get(row) instanceof Pelicula) {
                rowSelected = row;
                Point b = MouseInfo.getPointerInfo().getLocation();
                jPopupMenu1.setVisible(true);
                jPopupMenu1.show(this, (int) b.x - 190, (int) b.y - 150);
            }

        } else if (tableCatalogo.getModel().equals(modeloPelicula)) {
            //Sample 06: Show Popup menu at right click location
            if (evt.getButton() == MouseEvent.BUTTON3 && this.listaPeliculas.get(row) instanceof Pelicula) {
                rowSelected = row;
                Point b = MouseInfo.getPointerInfo().getLocation();
                jPopupMenu1.setVisible(true);
                jPopupMenu1.show(this, (int) b.x - 190, (int) b.y - 150);
            }

        }

    }//GEN-LAST:event_tableCatalogoMouseReleased

    private void pItemVotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pItemVotosActionPerformed
        if (tableCatalogo.getModel().equals(modeloMedia)) {
            this.mediaSelected = (Pelicula) this.listaMedias.get(rowSelected);
            JDVotos votos = new JDVotos(null, true, this.mediaSelected);
            votos.setVisible(true);

        } else if (tableCatalogo.getModel().equals(modeloPelicula)) {
            this.mediaSelected = (Pelicula) this.listaPeliculas.get(rowSelected);
            JDVotos votos = new JDVotos(null, true, this.mediaSelected);
            votos.setVisible(true);

        }
    }//GEN-LAST:event_pItemVotosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDCatalogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDCatalogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDCatalogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDCatalogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDCatalogo dialog = new JDCatalogo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboMedia;
    private javax.swing.JComboBox<String> comboOrdenar;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelMostrar;
    private javax.swing.JLabel labelOrdenar;
    private javax.swing.JMenuItem pItemVotos;
    private javax.swing.JTable tableCatalogo;
    // End of variables declaration//GEN-END:variables
}
