/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package interfaz;

import funciones.ValidarDatos;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import modelo.ModeloListaTemporadas;
import vergeflix.Serie;
import vergeflix.Temporada;

/**
 *
 * @author Heriberto Amezcua
 * @version 1.0
 * @since JDK 19
 */
public class JDGestorTemporada extends javax.swing.JDialog {

    private ModeloListaTemporadas modelo;
    private Serie serie;
    private Temporada temporadaSeleccionada;
    private ArrayList<Temporada> listaTemporadas;
    private int selectedRow;

    /**
     * Creates new form JDGestionarSerie
     */
    public JDGestorTemporada(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JDGestorTemporada(java.awt.Frame parent, boolean modal, Serie serie) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        ImageIcon icon = new ImageIcon("play-icon.png");
        setIconImage(icon.getImage());
        setTitle("VERGEFLIX");
        this.serie = serie;
        this.listaTemporadas = serie.getListaTemporadas();
        modelo = new ModeloListaTemporadas(this.serie.getListaTemporadas());
        tableTemporadas.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        pItemEliminar = new javax.swing.JMenuItem();
        pItemModificar = new javax.swing.JMenuItem();
        pItemCapitulos = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTemporadas = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mItemAñadir = new javax.swing.JMenuItem();

        pItemEliminar.setText("Eliminar");
        pItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pItemEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pItemEliminar);

        pItemModificar.setText("Cambiar Fecha");
        pItemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pItemModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pItemModificar);

        pItemCapitulos.setText("Listar Capitulos");
        pItemCapitulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pItemCapitulosActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pItemCapitulos);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableTemporadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTemporadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableTemporadasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableTemporadas);

        jMenu1.setText("OPCIONES");

        mItemAñadir.setText("Añadir Temporada");
        mItemAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemAñadirActionPerformed(evt);
            }
        });
        jMenu1.add(mItemAñadir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mItemAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemAñadirActionPerformed
        String fechaStr = JOptionPane.showInputDialog(rootPane, "Introduzca la fecha de estreno de la nueva temporada (dd-MM-YYYY)");
        if (ValidarDatos.validarFecha(fechaStr)) {
            int dia = Integer.parseInt(fechaStr.split("-")[0]);
            int mes = Integer.parseInt(fechaStr.split("-")[1]);
            int año = Integer.parseInt(fechaStr.split("-")[2]);
            this.serie.añadirTemporada(LocalDate.of(año, mes, dia));
            JOptionPane.showMessageDialog(rootPane, "La temporada se ha añadido correctamente");
            modelo.fireTableDataChanged();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha podido añadir la temporada", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mItemAñadirActionPerformed

    private void tableTemporadasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTemporadasMousePressed
        //Sample 06: Show Popup menu at right click location
        if (evt.getButton() == MouseEvent.BUTTON3) {
            Point b = MouseInfo.getPointerInfo().getLocation();
            jPopupMenu1.setVisible(true);
            int row = tableTemporadas.rowAtPoint(evt.getPoint());
            int column = tableTemporadas.columnAtPoint(evt.getPoint());
            jPopupMenu1.show(this, (int) b.x - 400, (int) b.y - 250);
            tableTemporadas.setRowSelectionInterval(row, row);
            tableTemporadas.setColumnSelectionInterval(column, column);
            temporadaSeleccionada = this.listaTemporadas.get(row);
            selectedRow = row;
        }
    }//GEN-LAST:event_tableTemporadasMousePressed

    private void pItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pItemEliminarActionPerformed
        int result = JOptionPane.showConfirmDialog(rootPane, "¿Seguro que quiere eliminar la temporada? " + (this.selectedRow + 1), "Eliminar", JOptionPane.WARNING_MESSAGE);

        if (result == 0) {
            this.serie.eliminarTemporada(this.selectedRow + 1);
        }
        modelo.fireTableDataChanged();
    }//GEN-LAST:event_pItemEliminarActionPerformed

    private void pItemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pItemModificarActionPerformed
        String fechaStr = JOptionPane.showInputDialog(rootPane, "Introduzca la nueva fecha de estreno de la temporada (dd-MM-YYYY)");
        if (!fechaStr.isBlank()) {
            System.out.println(fechaStr);
            if (ValidarDatos.validarFecha(fechaStr)) {
                int dia = Integer.parseInt(fechaStr.split("-")[0]);
                int mes = Integer.parseInt(fechaStr.split("-")[1]);
                int año = Integer.parseInt(fechaStr.split("-")[2]);
                this.serie.setTemporada(selectedRow + 1, LocalDate.of(año, mes, dia));
                JOptionPane.showMessageDialog(rootPane, "La temporada se ha modificado correctamente");
                modelo.fireTableDataChanged();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se ha podido modificar la temporada", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_pItemModificarActionPerformed

    private void pItemCapitulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pItemCapitulosActionPerformed
        JDGestorCapitulos capitulos = new JDGestorCapitulos(null, true, this.temporadaSeleccionada);
        capitulos.setVisible(true);
        modelo.fireTableDataChanged();
    }//GEN-LAST:event_pItemCapitulosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDGestorTemporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDGestorTemporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDGestorTemporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDGestorTemporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDGestorTemporada dialog = new JDGestorTemporada(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mItemAñadir;
    private javax.swing.JMenuItem pItemCapitulos;
    private javax.swing.JMenuItem pItemEliminar;
    private javax.swing.JMenuItem pItemModificar;
    private javax.swing.JTable tableTemporadas;
    // End of variables declaration//GEN-END:variables
}
