/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package interfaz;

import funciones.PedirDatosMedia;
import funciones.ValidarDatos;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import vergeflix.Pelicula;
import vergeflix.Tematica;

/**
 *
 * @author Heriberto Amezcua
 * @version 1.0
 * @since JDK 19
 */
public class JDModificarPelicula extends javax.swing.JDialog {

    private Pelicula pelicula;

    /**
     * Creates new form JDModificar
     */
    public JDModificarPelicula(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JDModificarPelicula(java.awt.Frame parent, boolean modal, Pelicula pelicula) {
        super(parent, modal);
        initComponents();

        ImageIcon icon = new ImageIcon("play-icon.png");
        setIconImage(icon.getImage());
        setTitle("VERGEFLIX");
        setResizable(false);
        setLocationRelativeTo(null);

        this.pelicula = pelicula;
        labelTitulo.setText("Modificando " + pelicula.getNombre());
        textTitulo.setText(pelicula.getNombre());
        textEdad.setText("" + pelicula.getCalificacionEdad());

        StringBuilder fechaInc = new StringBuilder(pelicula.getFechaIncorporacionAlCatalogo().toString());
        int año = Integer.parseInt(fechaInc.toString().split("-")[0]);
        int mes = Integer.parseInt(fechaInc.toString().split("-")[1]);
        int dia = Integer.parseInt(fechaInc.toString().split("-")[2]);
        textIncorporacion.setText(dia + "-" + mes + "-" + año);
        if (pelicula.getEstaDisponible()) {
            checkSi.doClick();
        } else {
            checkNo.doClick();
        }
        textDirector.setText(pelicula.getDirector());
        textActor.setText(pelicula.getActorPrincipal());
        textDuracion.setText("" + pelicula.getDuracion());

        switch (this.pelicula.getCategoria().toString()) {
            case "COMEDIA" -> {
                comboTematicas.setSelectedIndex(5);

            }
            case "DRAMA" -> {
                comboTematicas.setSelectedIndex(3);

            }
            case "TERROR" -> {
                comboTematicas.setSelectedIndex(4);

            }
            case "SUSPENSE" -> {
                comboTematicas.setSelectedIndex(2);

            }
            case "CIENCIA_FICCION" -> {
                comboTematicas.setSelectedIndex(0);

            }
            case "FANTASIA" -> {
                comboTematicas.setSelectedIndex(1);

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        btnGroupDisponible = new javax.swing.ButtonGroup();
        labelTitulo = new javax.swing.JLabel();
        labelNuevoTitulo = new javax.swing.JLabel();
        labelEdad = new javax.swing.JLabel();
        labelIncorporacion = new javax.swing.JLabel();
        labelDisponibilidad = new javax.swing.JLabel();
        labelDirector = new javax.swing.JLabel();
        labelActor = new javax.swing.JLabel();
        labelDuracion = new javax.swing.JLabel();
        labelTematica = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        textEdad = new javax.swing.JTextField();
        textTitulo = new javax.swing.JTextField();
        textDirector = new javax.swing.JTextField();
        textIncorporacion = new javax.swing.JTextField();
        textActor = new javax.swing.JTextField();
        textDuracion = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        checkSi = new javax.swing.JCheckBox();
        checkNo = new javax.swing.JCheckBox();
        comboTematicas = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        labelTitulo.setText("Modificando...");

        labelNuevoTitulo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelNuevoTitulo.setText("Título:");

        labelEdad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelEdad.setText("Calificación de Edad:");

        labelIncorporacion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelIncorporacion.setText("Fecha de Incorporación:");

        labelDisponibilidad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelDisponibilidad.setText("Disponible:");

        labelDirector.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelDirector.setText("Director:");

        labelActor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelActor.setText("Actor Principal:");

        labelDuracion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelDuracion.setText("Duración:");

        labelTematica.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelTematica.setText("Temática:");

        btnModificar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        textEdad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        textTitulo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        textDirector.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        textIncorporacion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        textActor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        textDuracion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGroupDisponible.add(checkSi);
        checkSi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkSi.setText("Si");

        btnGroupDisponible.add(checkNo);
        checkNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkNo.setText("No");

        comboTematicas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboTematicas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ciencia Ficción", "Fantasía", "Suspense", "Drama", "Terror", "Comedia" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTitulo)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTematica)
                            .addComponent(labelDuracion)
                            .addComponent(labelDirector)
                            .addComponent(labelEdad)
                            .addComponent(labelActor)
                            .addComponent(labelDisponibilidad)
                            .addComponent(labelNuevoTitulo)
                            .addComponent(labelIncorporacion)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textEdad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textDirector, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textActor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textDuracion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(textIncorporacion, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(checkSi, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(checkNo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(comboTematicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(labelTitulo)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNuevoTitulo))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEdad))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textIncorporacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIncorporacion))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDisponibilidad)
                    .addComponent(checkSi)
                    .addComponent(checkNo))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDirector))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelActor))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDuracion))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTematica)
                    .addComponent(comboTematicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        ArrayList<JTextField> listaCampos = new ArrayList<>();

        textTitulo.setName("Titulo");
        textEdad.setName("Edad");
        textIncorporacion.setName("Incorporacion");
        textDirector.setName("Director");
        textActor.setName("Actor");
        textDuracion.setName("Duracion");

        listaCampos.add(textTitulo);
        listaCampos.add(textEdad);
        listaCampos.add(textIncorporacion);
        listaCampos.add(textDirector);
        listaCampos.add(textActor);
        listaCampos.add(textDuracion);

        boolean sePuedeModificar = true;
        for (JTextField text : listaCampos) {
            if (!text.getText().isBlank()) {
                switch (text.getName()) {
                    case "Titulo" -> {
                        if (ValidarDatos.validarTitulo(text.getText())) {
                            this.pelicula.setNombre(text.getText());

                        } else {
                            JOptionPane.showMessageDialog(rootPane, "El título introducido es erróneo", "ERROR", JOptionPane.ERROR_MESSAGE);
                            setVisible(false);

                        }
                    }
                    case "Edad" -> {
                        if (ValidarDatos.validarCalificacionEdad(Integer.parseInt(text.getText()))) {
                            this.pelicula.setCalificacionEdad(Integer.parseInt(text.getText()));
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "La calificación de edad introducida es errónea", "ERROR", JOptionPane.ERROR_MESSAGE);
                            setVisible(false);

                        }
                    }
                    case "Incorporacion" -> {
                        if (ValidarDatos.validarFecha(text.getText())) {
                            StringBuilder fechaIntr = new StringBuilder(text.getText());
                            int dia = Integer.parseInt(fechaIntr.toString().split("-")[0]);
                            int mes = Integer.parseInt(fechaIntr.toString().split("-")[1]);
                            int año = Integer.parseInt(fechaIntr.toString().split("-")[2]);

                            this.pelicula.setFechaIncorporacionAlCatalogo(LocalDate.of(año, mes, dia));
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "La fecha de incorporación introducida es errónea", "ERROR", JOptionPane.ERROR_MESSAGE);
                            setVisible(false);

                        }
                    }
                    case "Director" -> {
                        if (ValidarDatos.validarNombrePersona(text.getText())) {
                            this.pelicula.setDirector(text.getText());
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "El nombre de director introducido es erróneo", "ERROR", JOptionPane.ERROR_MESSAGE);
                            setVisible(false);

                        }
                    }
                    case "Actor" -> {
                        if (ValidarDatos.validarNombrePersona(text.getText())) {
                            this.pelicula.setActorPrincipal(text.getText());
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "El nombre de actor introducido es erróneo", "ERROR", JOptionPane.ERROR_MESSAGE);
                            setVisible(false);

                        }
                    }
                    case "Duracion" -> {
                        if (ValidarDatos.validarDuracion(Integer.parseInt(text.getText()))) {
                            this.pelicula.setDuracion(Integer.parseInt(text.getText()));
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "La duración introducida es errónea", "ERROR", JOptionPane.ERROR_MESSAGE);
                            setVisible(false);

                        }
                    }
                }
            }
        }

        if (checkSi.isSelected()) {
            this.pelicula.setEstaDisponible(true);
        } else {
            this.pelicula.setEstaDisponible(false);

        }

        switch (comboTematicas.getSelectedIndex()) {
            case 0 -> {
                this.pelicula.setCategoria(Tematica.CIENCIA_FICCION);

            }
            case 1 -> {
                this.pelicula.setCategoria(Tematica.FANTASIA);

            }
            case 2 -> {
                this.pelicula.setCategoria(Tematica.SUSPENSE);

            }
            case 3 -> {
                this.pelicula.setCategoria(Tematica.DRAMA);

            }
            case 4 -> {
                this.pelicula.setCategoria(Tematica.TERROR);

            }
            case 5 -> {
                this.pelicula.setCategoria(Tematica.COMEDIA);

            }
        }

        JOptionPane.showMessageDialog(rootPane, "La película se ha modificado correctamente");
        setVisible(false);

    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDModificarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDModificarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDModificarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDModificarPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDModificarPelicula dialog = new JDModificarPelicula(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.ButtonGroup btnGroupDisponible;
    private javax.swing.JButton btnModificar;
    private javax.swing.JCheckBox checkNo;
    private javax.swing.JCheckBox checkSi;
    private javax.swing.JComboBox<String> comboTematicas;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel labelActor;
    private javax.swing.JLabel labelDirector;
    private javax.swing.JLabel labelDisponibilidad;
    private javax.swing.JLabel labelDuracion;
    private javax.swing.JLabel labelEdad;
    private javax.swing.JLabel labelIncorporacion;
    private javax.swing.JLabel labelNuevoTitulo;
    private javax.swing.JLabel labelTematica;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JTextField textActor;
    private javax.swing.JTextField textDirector;
    private javax.swing.JTextField textDuracion;
    private javax.swing.JTextField textEdad;
    private javax.swing.JTextField textIncorporacion;
    private javax.swing.JTextField textTitulo;
    // End of variables declaration//GEN-END:variables
}
